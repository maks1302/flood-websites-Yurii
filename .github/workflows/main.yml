name: Build EXE

on:
  push:
    branches:
      - main  # Runs the action on any push to the main branch

jobs:
  build:
    runs-on: windows-latest  # Use Windows runner for .exe

    steps:
    - name: Check out the code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9.6'  # Specify the Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Create PyInstaller hooks for Selenium packages
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Force -Path hooks | Out-Null
        @'
        from PyInstaller.utils.hooks import collect_data_files, copy_metadata

        # Ensure Selenium JS resources are included
        datas = collect_data_files('selenium')
        datas += copy_metadata('selenium')
        """
        This hook helps PyInstaller collect Selenium's package data
        (e.g. JavaScript files used by the remote WebDriver implementation).
        """
        '@ | Set-Content -Path hooks/hook-selenium.py -Encoding UTF8

        @'
        from PyInstaller.utils.hooks import collect_data_files, copy_metadata

        # Include Selenium Wire data files (e.g. CA certificate ca.crt)
        datas = collect_data_files('seleniumwire')
        datas += copy_metadata('seleniumwire')
        """
        This hook ensures selenium-wire's bundled certificate and other data
        are packaged inside the one-file executable, preventing runtime errors
        like missing ca.crt under _MEI*/seleniumwire/.
        """
        '@ | Set-Content -Path hooks/hook-seleniumwire.py -Encoding UTF8

    - name: Build EXE
      run: pyinstaller --noconfirm --onefile --additional-hooks-dir hooks main.py

    - name: Upload EXE artifact
      uses: actions/upload-artifact@v4
      with:
        name: built-exe
        path: dist/main.exe  # Uploads the .exe for download
